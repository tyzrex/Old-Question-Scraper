    INFO: 2023-06-04 09:23:28,197:               log.py:   20: Logging to /home/tyzrex/Documents/scraper/mdpdf.log
   DEBUG: 2023-06-04 09:23:28,197:               cli.py:  103: questions.md
    INFO: 2023-06-04 09:23:28,197:         converter.py:   14: questions.md
   DEBUG: 2023-06-04 09:23:28,207:      pdf_renderer.py:  470: printSegment: Questions
   DEBUG: 2023-06-04 09:23:28,208:      pdf_renderer.py:  470: printSegment: Year: 2067
   DEBUG: 2023-06-04 09:23:28,209:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,209:      pdf_renderer.py:  470: printSegment: Answer the following questions in short:(5 x 2 = 10)
   DEBUG: 2023-06-04 09:23:28,210:      pdf_renderer.py:  470: printSegment: a) Differentiate between logical data independence and physical data independence.
   DEBUG: 2023-06-04 09:23:28,210:      pdf_renderer.py:  470: printSegment: b) Three-schema architectures.
   DEBUG: 2023-06-04 09:23:28,210:      pdf_renderer.py:  470: printSegment: c) Differentiate between database schema and a database state.
   DEBUG: 2023-06-04 09:23:28,210:      pdf_renderer.py:  470: printSegment: d) Different type of data attributes.
   DEBUG: 2023-06-04 09:23:28,210:      pdf_renderer.py:  470: printSegment: e) The difference among a relationship instance, a relationship type, and relationship set.
   DEBUG: 2023-06-04 09:23:28,210:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,211:      pdf_renderer.py:  470: printSegment: a) Draw an ER diagram for database showing Bank. Each Bank can have multiple branches, and
   DEBUG: 2023-06-04 09:23:28,211:      pdf_renderer.py:  470: printSegment: each branch can have multiple accounts and loans. (6)
   DEBUG: 2023-06-04 09:23:28,211:      pdf_renderer.py:  470: printSegment: b) In what sense does a relational calculus differ from relational algebra, and in what sense are they similar? (4)
   DEBUG: 2023-06-04 09:23:28,211:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,211:      pdf_renderer.py:  470: printSegment: a) Assume a database about Company.(5)
   DEBUG: 2023-06-04 09:23:28,211:      pdf_renderer.py:  470: printSegment: EMPLOYEE (ss#, name)
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: COMPANY (cname, address)
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: WORKS (ss#, cname)
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: SUPERVISE ( superviser
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: ss#, employee
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: ss#)
   DEBUG: 2023-06-04 09:23:28,212:      pdf_renderer.py:  470: printSegment: Write relational algebra and SQL queries for each of the following cases.
   DEBUG: 2023-06-04 09:23:28,213:      pdf_renderer.py:  470: printSegment: i) Find the names of all supervisors that work in companies whose address equals ‘pokhara’.
   DEBUG: 2023-06-04 09:23:28,215:      pdf_renderer.py:  470: printSegment: ii) Find the name of all the companies who have more than 4 supervisors.
   DEBUG: 2023-06-04 09:23:28,215:      pdf_renderer.py:  470: printSegment: iii) Find the name of supervisor who has the largest number of employees.
   DEBUG: 2023-06-04 09:23:28,215:      pdf_renderer.py:  470: printSegment: b) What is a view in SQL and how it is defined? Explain how views are typically implemented. (5)
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment:  4 
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment: a) Define a first, second, and third normal forms with suitable examples (5)
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment: b) What is a functional dependency? When are two sets of functional dependencies equivalent? How can we
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment: determine their equivalence(1+2+2)
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment: a) Discuss the ACID properties of a database transaction with suitable example.(5)
   DEBUG: 2023-06-04 09:23:28,216:      pdf_renderer.py:  470: printSegment: b) Describe the serial and serializable schedule? Why serializable schedule is consider correct?(5)
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: 6.a) How does the granularity of data items affects the performance of concurrency control? What factors affect
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: selections of granularity size for data items?(5)
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: b) Describe the two-phase commit protocol for database transaction. (5)
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: Year: 2067%20II
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: 1.Answer the following questions in short.(5x2=10)
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: a. Advantage of DBMS approach over file system approach.
   DEBUG: 2023-06-04 09:23:28,217:      pdf_renderer.py:  470: printSegment: b. Differentiate between two-tier and three-tier client/server architecture.
   DEBUG: 2023-06-04 09:23:28,218:      pdf_renderer.py:  470: printSegment: c. What is weak entity, owner entity type and identifying relationship?
   DEBUG: 2023-06-04 09:23:28,218:      pdf_renderer.py:  470: printSegment: d.The null value attribute and its uses.
   DEBUG: 2023-06-04 09:23:28,218:      pdf_renderer.py:  470: printSegment: e) The difference among a relationship instance, a relationship type and a relationship set.
   DEBUG: 2023-06-04 09:23:28,218:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: a)Draw an ER diagram for a database showing Hospital system. The Hospital maintains data about
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: Affiliated Hospitals, type of Treatments facilities given at each hospital, and Patients.(6)
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: b)What is join operation? Differentiate between equijoin and natural join with suitable example.(4)
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: 3.a)Assume a database about Company.
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: EMPLOYEE (ss#, name)
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: COMPANY (cname, address)
   DEBUG: 2023-06-04 09:23:28,219:      pdf_renderer.py:  470: printSegment: WORKS (ss#, cname)
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: SUPERVISES (supervisor
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: ss#, employee
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: ss#)
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: Write relational algebra and SQL queries for each of the following cases.(5)
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: (i)Find the names of all the supervisors that work in companies whose address equal ‘Kathmandu’.
   DEBUG: 2023-06-04 09:23:28,220:      pdf_renderer.py:  470: printSegment: (ii)Find the names of all the companies who have more than 4 supervisors.
   DEBUG: 2023-06-04 09:23:28,221:      pdf_renderer.py:  470: printSegment: (iii)Find the name of the supervisor who has the largest number of employees.
   DEBUG: 2023-06-04 09:23:28,221:      pdf_renderer.py:  470: printSegment: b)How can define view in SQL? Explain the problems that may arise when one attempts to update a view.(1+4)
   DEBUG: 2023-06-04 09:23:28,221:      pdf_renderer.py:  470: printSegment: 4.a)What are different update anomalies? Explain each in with suitable example.(1+4)
   DEBUG: 2023-06-04 09:23:28,221:      pdf_renderer.py:  470: printSegment: b)Define functional dependency. Describe the closure of a set of functional dependencies with an example.(1+4)
   DEBUG: 2023-06-04 09:23:28,221:      pdf_renderer.py:  470: printSegment: 5.a) Draw a state diagram, and discuss the typical state that a transaction goes through during transaction.(5)
   DEBUG: 2023-06-04 09:23:28,221:      pdf_renderer.py:  470: printSegment: b) Which of the following schedule is (conflict) Serializable? For each serializable schedule, determine the
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: equivalent serial schedules.(5)
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: i)r1(x); r3(x); w1(x); r2(x); w3(x);
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: ii)r1(x); r3(x); w3(x); w1(x); r2(x);
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: iii)r3(x); r2(x); w3(x); r1(x); w1(x);
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: iv)r3(x); r2(x); r1(x); w3(x); w1(x);
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: 6.a) Discuss the problems of deadlock and starvation, and the different approaches to dealing with these
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: problems.(5)
   DEBUG: 2023-06-04 09:23:28,222:      pdf_renderer.py:  470: printSegment: b)Describe write-ahead logging protocol.(5)
   DEBUG: 2023-06-04 09:23:28,223:      pdf_renderer.py:  470: printSegment: Year: 2068
   DEBUG: 2023-06-04 09:23:28,223:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,223:      pdf_renderer.py:  470: printSegment: Answer the following questions in short:  (5 x 2 = 10)
   DEBUG: 2023-06-04 09:23:28,223:      pdf_renderer.py:  470: printSegment: (a) Differentiate between program-data independence and program-operation independence.
   DEBUG: 2023-06-04 09:23:28,223:      pdf_renderer.py:  470: printSegment: (b) The ANSI/SPARC architecture with diagram.
   DEBUG: 2023-06-04 09:23:28,223:      pdf_renderer.py:  470: printSegment: (c) Differentiate between procedural and non procedural DMLs.
   DEBUG: 2023-06-04 09:23:28,224:      pdf_renderer.py:  470: printSegment: (d) The difference among an entity, an entity type, and an entity set.
   DEBUG: 2023-06-04 09:23:28,224:      pdf_renderer.py:  470: printSegment: (e) When is the concept of a weak entity is used in data modeling?
   DEBUG: 2023-06-04 09:23:28,224:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,225:      pdf_renderer.py:  470: printSegment: (a) Draw an ER diagram for a database to keep track of the teams and games of a sport league. A
   DEBUG: 2023-06-04 09:23:28,225:      pdf_renderer.py:  470: printSegment: team has a number of players, not all of whom participate in each game. It is desired to keep track of
   DEBUG: 2023-06-04 09:23:28,225:      pdf_renderer.py:  470: printSegment: the players participating in each game for each team, the position they played in that game, and the
   DEBUG: 2023-06-04 09:23:28,225:      pdf_renderer.py:  470: printSegment: result of the game.(6)
   DEBUG: 2023-06-04 09:23:28,225:      pdf_renderer.py:  470: printSegment: (b)What is union compatibility? Define operations union, intersection, and difference on two union compatible
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment: relations R and S with suitable example.(4)
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment: (a) Describe the different clauses in the syntax of an SQL query, and show what type of constructs
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment: can be specified in each clause. (5)
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment: (b) What is constraint? How does SQL allow implementation of general integrity constraints? (1+4)
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment:  4 
   DEBUG: 2023-06-04 09:23:28,226:      pdf_renderer.py:  470: printSegment: (a) Define Boyce-Codd normal form. How does it differ from 3 NF? Why is it considered a stronger
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment: form of 3NF?(1+4)
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment: (b) What is functional dependency? Describe full and partial functional dependency with suitable example. (1+4)
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment: (a) Discuss the ACID properties of a database transaction with suitable example.(5)
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment: (b)What is schedule? Define the concept of recoverable, cascadeless, and strict schedule, and compare them in terms
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment: of their recoverability.(1+4)
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment:  6 
   DEBUG: 2023-06-04 09:23:28,227:      pdf_renderer.py:  470: printSegment: (a) What is the two-phase locking protocol? How does it guarantee serializability?(5)
   DEBUG: 2023-06-04 09:23:28,228:      pdf_renderer.py:  470: printSegment: (b) What do you mean by transaction rollback? What is meant by cascading rollback? Why do practical recovery
   DEBUG: 2023-06-04 09:23:28,228:      pdf_renderer.py:  470: printSegment: methods use protocols that do not permit cascading rollback? (5)
   DEBUG: 2023-06-04 09:23:28,228:      pdf_renderer.py:  470: printSegment: Year: 2069
   DEBUG: 2023-06-04 09:23:28,228:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,228:      pdf_renderer.py:  470: printSegment: Answer the following questions in short:    (5 x 2 =10)
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment: a) Differentiate between two-tier and three-tier client/server architecture.
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment: b) The null value attribute and its uses.
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment: c) Difference between logical data independence and physical data independence.
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment: d) When is the concept of a weak entity used in data modeling?
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment: e)The difference among a relationship instance, a relationship type, and relationship set.
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,229:      pdf_renderer.py:  470: printSegment: a) Draw an ER diagram for database showing hospital system. The Hospital maintains data about
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: affiliated Hospitals, type of treatments facilities given at each hospital and patients.(6)
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: b) In what sense does a relational calculus differ from relational algebra, and in what sense are they similar?(4)
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: a)Assume a database about Company.(5)
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: EMPLOYEE (ss#, name)
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: COMPANY (cname, address)
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: WORKS (ss#, cname)
   DEBUG: 2023-06-04 09:23:28,230:      pdf_renderer.py:  470: printSegment: SUPERVISE ( superviser
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: ss#, employee
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: ss#)
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: Write relational algebra and SQL queries for each of the following cases.
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: i)Find the names of all supervisors that work in companies whose address equals ‘Biratnagar
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: '
   DEBUG: 2023-06-04 09:23:28,231:      pdf_renderer.py:  470: printSegment: .
   DEBUG: 2023-06-04 09:23:28,232:      pdf_renderer.py:  470: printSegment: ii)Find the name of all the companies who have more than 10 employees.
   DEBUG: 2023-06-04 09:23:28,232:      pdf_renderer.py:  470: printSegment: iii)Find the name of supervisor who has the minimum number of employees.
   DEBUG: 2023-06-04 09:23:28,232:      pdf_renderer.py:  470: printSegment: b) What is constraint? How does SQL allow implementation of general integrity constraints?(1+4)
   DEBUG: 2023-06-04 09:23:28,232:      pdf_renderer.py:  470: printSegment:  4 
   DEBUG: 2023-06-04 09:23:28,232:      pdf_renderer.py:  470: printSegment: a) Define a first, second, and third normal forms with suitable examples (5)
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment: b) What is a functional dependency? Describe full and partial dependency with suitable example.(1+4)
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment: a) Draw a state diagram, and discuss the typical state that a transaction goes through during
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment: transaction.(5)
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment: b) Describe the serial and serializable schedule? Why serializable schedule is consider correct?(5)
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment: 6.a) How does the granularity of data items affects the performance of concurrency control? What factors affect
   DEBUG: 2023-06-04 09:23:28,233:      pdf_renderer.py:  470: printSegment: selections of granularity size for data items? (5)
   DEBUG: 2023-06-04 09:23:28,234:      pdf_renderer.py:  470: printSegment: b) Describe write ahead logging protocol.(5)
   DEBUG: 2023-06-04 09:23:28,234:      pdf_renderer.py:  470: printSegment: Year: 2070
   DEBUG: 2023-06-04 09:23:28,234:      pdf_renderer.py:  470: printSegment: 1.(a) What is database management system? Discuss the advantages of using database management system over file
   DEBUG: 2023-06-04 09:23:28,234:      pdf_renderer.py:  470: printSegment: system.(2+3 =5)
   DEBUG: 2023-06-04 09:23:28,234:      pdf_renderer.py:  470: printSegment: (b) What is data abstraction? Discuss three levels of this abstraction (1+4=5)
   DEBUG: 2023-06-04 09:23:28,234:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,235:      pdf_renderer.py:  470: printSegment: a) Construct an ERD to record the marks that students get in different exams of different course
   DEBUG: 2023-06-04 09:23:28,235:      pdf_renderer.py:  470: printSegment: offerings.(5)
   DEBUG: 2023-06-04 09:23:28,235:      pdf_renderer.py:  470: printSegment: b) Define integrity constraint? Discuss domain constraint with suitable example.(1+4=5)
   DEBUG: 2023-06-04 09:23:28,235:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,235:      pdf_renderer.py:  470: printSegment: a) With the information given below, calculate any three members of F(6)
   DEBUG: 2023-06-04 09:23:28,236:      pdf_renderer.py:  470: printSegment: R = (A, B, C, G, H, I)
   DEBUG: 2023-06-04 09:23:28,236:      pdf_renderer.py:  470: printSegment: F = {A - > B, A - > C, CG - > I, B - > H}
   DEBUG: 2023-06-04 09:23:28,236:      pdf_renderer.py:  470: printSegment: b) Discuss 2NF and 3NF with suitable example. (4)
   DEBUG: 2023-06-04 09:23:28,236:      pdf_renderer.py:  470: printSegment: 4.Consider the following supplier database, where primary keys are underlined:(20)
   DEBUG: 2023-06-04 09:23:28,236:      pdf_renderer.py:  470: printSegment: Supplier (supplier-id, supplier-name, city)
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: Supplies (supplier-id, part-id, quantity)
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: Parts (part-id, part-name, color, weight)
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: Construct the following relational algebra queries for this relational database
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: a)Find the name of all supplies located in city 
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: Kathmandu
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,237:      pdf_renderer.py:  470: printSegment: .
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: b) Find the name of all parts supplied 
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: ABC Company
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: .
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: c)Find the name of all parts that are supplied in quantity greater than 300.
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: d)Find the number of parts supplied by 
   DEBUG: 2023-06-04 09:23:28,238:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment: ABC Company
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment: '
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment: .
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment: e)Find the name of all suppliers who supply more than 30 different parts
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment: a)What is serializable schedule? How can you test a schedule for conflict serializability?.(2+3=5)
   DEBUG: 2023-06-04 09:23:28,239:      pdf_renderer.py:  470: printSegment: b) Discuss recovery technique base on deferred update with concurrent execution in multi-user environment.(5)
   DEBUG: 2023-06-04 09:23:28,240:      pdf_renderer.py:  470: printSegment: Year: 2071
   DEBUG: 2023-06-04 09:23:28,240:      pdf_renderer.py:  470: printSegment: 1.a) Why do we need database management system? Discuss drawbacks of file system and advantages of database
   DEBUG: 2023-06-04 09:23:28,240:      pdf_renderer.py:  470: printSegment: management system. 
   DEBUG: 2023-06-04 09:23:28,240:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,240:      pdf_renderer.py:  470: printSegment: 2+3
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment: b) What is database system architecture? Describe three levels and benefits of this architecture. 
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment: 1+4
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,241:      pdf_renderer.py:  470: printSegment: A database is being constructed to keep track of the teams and games of a sports league. A team has
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: a number of players, not all of whom participate in each game. If is desired to keep track of the
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: players participating in each game. Design an ER diagram for this application. 
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: 10
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: 3.(a) Define integrity constraint? Discuss referential integrity in detail. 
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,242:      pdf_renderer.py:  470: printSegment: 1+4
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: (b) What is functional dependency? How can we use functional dependency to normalize a relation in 3NF?Discuss
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: with suitable example. 
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: 1+2+2
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: 4.Consider the following employee database, where primary keys are underlined. 
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,243:      pdf_renderer.py:  470: printSegment: 20
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: employee (employee-name, street, city)
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: works (employee-name, company-name, salary)
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: company (company-name, manager-name)
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: manages (employee-name, manager-name)
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: Give an expression in SQL for each of the following queries.
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: a)Find the names of all employees who work for Second Bank Corporation.
   DEBUG: 2023-06-04 09:23:28,244:      pdf_renderer.py:  470: printSegment: b) Find the names, street and cities of residence of all employees who work for Second Bank
   DEBUG: 2023-06-04 09:23:28,245:      pdf_renderer.py:  470: printSegment: Corporation.
   DEBUG: 2023-06-04 09:23:28,245:      pdf_renderer.py:  470: printSegment: c)Find the names, street addresses, and cities of residence of all employees who work for Second
   DEBUG: 2023-06-04 09:23:28,245:      pdf_renderer.py:  470: printSegment: Bank Corporation and earn less than $10,000.
   DEBUG: 2023-06-04 09:23:28,245:      pdf_renderer.py:  470: printSegment: d) Find the names of all employees who work under the manager “Devi Prasad”.
   DEBUG: 2023-06-04 09:23:28,247:      pdf_renderer.py:  470: printSegment: e)Find the number of employees having salary greater than or equal to 20000
   DEBUG: 2023-06-04 09:23:28,247:      pdf_renderer.py:  470: printSegment: 5.(a) Why do we need concurrency control mechanism? Discuss basic, conservative, and rigorous two phase locking
   DEBUG: 2023-06-04 09:23:28,247:      pdf_renderer.py:  470: printSegment: algorithm. 
   DEBUG: 2023-06-04 09:23:28,247:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,247:      pdf_renderer.py:  470: printSegment: 2+3
   DEBUG: 2023-06-04 09:23:28,247:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: (b) What is shadow paging? How can we use this technique to recover our database? 
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: 5
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: Year: 2072
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: Answer the following questions in short: (5x2=10)
   DEBUG: 2023-06-04 09:23:28,248:      pdf_renderer.py:  470: printSegment: a)Three-schema architecture
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: b) Advantage of DBMS approach over file system approach.
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: c) What is weak entity, owner entity type and identifying relationship?
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: d) Different types of data attributes.
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: e) Differentiate between program-data independence and program-operation independence.
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: (a) Given an ER diagram for a database showing Bank. Each Bank can have multiple Branches, and
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: each branch can have multiple accounts and loans. 
   DEBUG: 2023-06-04 09:23:28,249:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,250:      pdf_renderer.py:  470: printSegment: 6
   DEBUG: 2023-06-04 09:23:28,250:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,250:      pdf_renderer.py:  470: printSegment: (b) What is union compatibility? Define operations union, intersection, and difference on two union compatible
   DEBUG: 2023-06-04 09:23:28,250:      pdf_renderer.py:  470: printSegment: relations R and S with suitable example.
   DEBUG: 2023-06-04 09:23:28,250:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: 4
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: (a) Describe the different clauses in the syntax of an SQL query, and show what types of constructs
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: can be specified in each clause.
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: 5
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,251:      pdf_renderer.py:  470: printSegment: (b) How view is defined in SQL? Explain the problems that may arise when one attempts to update a view. 
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: 1+4
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment:  4 
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: (a) Define Boyce-Codd normal form. How does it differ from 3NF? Why is it considered a stronger
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: form of 3NF? 
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,252:      pdf_renderer.py:  470: printSegment: 1+4
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: (b) What is a functional dependency? When are two sets of functional dependencies equivalent? How can we
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: determine their equivalence? 
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: 1+4
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: (a) Discuss the ACID properties of a database transaction with suitable example.
   DEBUG: 2023-06-04 09:23:28,253:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: 5
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: (b) Indicate how the recovery scheme works in a single user environment if the system fails
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: i)After the transaction starts and before the read.
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: ii)After the read and before the write.
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: iii)After the write and before the commit.
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: iv)After the commit and before al database entries are flushed onto disk.
   DEBUG: 2023-06-04 09:23:28,254:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: 5
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment:  6 
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: (a) What is the two-phase locking protocol? How does it guarantee serializability?
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: 5
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: (b) What is meant by transaction rollback? What is meant by cascading rollback? Why do practical recovery
   DEBUG: 2023-06-04 09:23:28,255:      pdf_renderer.py:  470: printSegment: methods use protocols that do not permit cascading rollback? 
   DEBUG: 2023-06-04 09:23:28,256:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,256:      pdf_renderer.py:  470: printSegment: 5
   DEBUG: 2023-06-04 09:23:28,256:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,256:      pdf_renderer.py:  470: printSegment: Year: 2073
   DEBUG: 2023-06-04 09:23:28,256:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,256:      pdf_renderer.py:  470: printSegment: Answer the following questions in short:(5 x 2 = 10)
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (a) Differentiate between Database Manager and database Administrator.
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (b) Relational database
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (c) Data encryption
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (d) Lock base protocols
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (e) Deadlock handling
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (a) What do you mean by Entity-relationship model? Explain strong and weak entity set.(6)
   DEBUG: 2023-06-04 09:23:28,257:      pdf_renderer.py:  470: printSegment: (b) What is composite attributes? Explain.(4)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: 3.(a) Which part of the RDBMS taken care of the data dictionary? Explain.(4)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: (b) What do you mean by Hierarchical model? Explain.(6)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: 4.(a) Explain the functional dependency and Trivial functional dependency with examples.(5)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: (b) Differentiate between distributed DBMS and client-server DBMS.(5)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: Comparision between 1NF, 2NF, 3NF and BCNF with example.(10)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: 6.(a) Explain the concurrences control mechanism in detail with example.(6)
   DEBUG: 2023-06-04 09:23:28,258:      pdf_renderer.py:  470: printSegment: (b) What are the methods used to prevent the system from dead lock?(4)
   DEBUG: 2023-06-04 09:23:28,259:      pdf_renderer.py:  470: printSegment: Year: 2074
   DEBUG: 2023-06-04 09:23:28,259:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,259:      pdf_renderer.py:  470: printSegment: Answer the following questions in short:(5 x 2 = 10)
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: (a)Data abstraction
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: (b) Network data model
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: (c)Trigger
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: (d)Trivial functional dependency
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: (e) Serializable schedule
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: 2.(a) Who is data administrator? What are the main function of database administrator?(2 + 3 = 5)
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment: (b) Construct an E-R diagram for online course registration where students registers courses online.(5)
   DEBUG: 2023-06-04 09:23:28,260:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: Consider the following database, where primary keys are underlined
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: teaches(TID, TName, Qualification)
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: teaches(TID, CID)
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: course(CID, CName, CCode)
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: Construct the following relational algebra and SQL queries for this database.(10)
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: (a) Find the names of all teaches who have PhD qualification.
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: (b) Find the names of all courses taught by Ram Prasad.
   DEBUG: 2023-06-04 09:23:28,261:      pdf_renderer.py:  470: printSegment: (c) Find the total number of courses taught by Ram Prasad.
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment: 4.(a) Discuss referential integrity with example.(5)
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment: 4(b) What is functional dependency? Why do we need inference rules?(2.5 + 2.5 = 5)
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment: What are the benefits of using normalization? Discuss 1NF, 2NF, and 3NF with suitable
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment: example.(2.5 + 7.5 = 10)
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment: 6.(a) Why do we need concurrency control? Discuss two phase locking protocol.(2 + 3 = 5 )
   DEBUG: 2023-06-04 09:23:28,262:      pdf_renderer.py:  470: printSegment: (b) Why do we need database recovery? Discuss shadow paging technique for database recovery.(2 + 3 = 5)
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: Year: 2075
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: Answer the following questions.(5 x 2 = 10)
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: (a)Specialization
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: (b)Hierarchical data model
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: (c)Domain data model
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: (d) Non trivial functional dependency
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: (e) Checkpoint
   DEBUG: 2023-06-04 09:23:28,263:      pdf_renderer.py:  470: printSegment: 2.(a) What is data definition language? How is it different from data manipulation language?(2 + 3 = 5)
   DEBUG: 2023-06-04 09:23:28,264:      pdf_renderer.py:  470: printSegment: 2(b) Construct an E-R diagram for online book store where customers buy books online.(5)
   DEBUG: 2023-06-04 09:23:28,264:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,264:      pdf_renderer.py:  470: printSegment: Consider the following database, where primary keys are underlined
   DEBUG: 2023-06-04 09:23:28,264:      pdf_renderer.py:  470: printSegment: student (SID, SName, semester)
   DEBUG: 2023-06-04 09:23:28,264:      pdf_renderer.py:  470: printSegment: studies (SID, CID)
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: course (CID, CName, CCode)
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: Construct the following relational algebra and SQL queries for this database.(10)
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: (a) Find the names of all students in third semester.
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: (b) Find the names of all courses studied by Ram.
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: (c) Find the total number of students who study DBMS.
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: 4.(a) Discuss loss-less decomposition and dependency preservation property of normalization.(2.5 + 2.5 = 5)
   DEBUG: 2023-06-04 09:23:28,265:      pdf_renderer.py:  470: printSegment: (b) Discuss 3NF with example. How is it different from BCNF?(3 + 2 = 5)
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment: (a) Discuss timestamp based concurrency control technique.(4)
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment: (b) What is deadlock? Discuss deadlock prevention, avoidence and detection and recovery techniques.(2 + 4 = 6)
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment:  6 
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment: (a) Why do you need recovery? Discuss different types of failures.(2 + 3 = 5)
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment: (b) What is log-based recovery? Discuss the recovery technique for the loss of non-volatile storage.(2 + 3 = 5)
   DEBUG: 2023-06-04 09:23:28,266:      pdf_renderer.py:  470: printSegment: Year: 2076
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment: What are the advantages of using Database Management System over traditional filing system?
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment: Explain different data models with example.(3 + 7)
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment: What is concurrency control? Name various methods of controlling the concurrency control?
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment: Differentiate between Binary lock and shared/Exclusive lock.(3 + 3 + 4 = 10)
   DEBUG: 2023-06-04 09:23:28,267:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment: What is normal form? Explain their types. Explain about loss-less join decomposition.(3 + 3 + 4 =
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment: 10)
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment:  4 
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment: What is data abstraction? What are three levels of data abstraction? Explain.(2 + 3)
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment: What is difference between Entities and Entity sets? Explain with example.(5)
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment:  6 
   DEBUG: 2023-06-04 09:23:28,268:      pdf_renderer.py:  470: printSegment: Create two table Courses (CID, Course, Dept) and HoD (Dept, Head) using SQL language with all
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: constraints 
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: [
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: Primary key, Foreign key and Referential Integrity
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: ]
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: . Assume the types of attributes by
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: your own.(5)
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment:  7 
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment: Differentiate between Integrity and Security with example.(5)
   DEBUG: 2023-06-04 09:23:28,269:      pdf_renderer.py:  470: printSegment:  8 
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment: Define schedule and serializability. How can you test the serializability?(2 + 3)
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment:  9 
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment: What is Granulity of data items? How does it effect in concurrency control?(2 + 3)
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment:  10 
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment: Explain 2 phase locking technique in brief.(5)
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment:  11 
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment: What are the different approaches of Database recover? What should log file maintain in log-based
   DEBUG: 2023-06-04 09:23:28,270:      pdf_renderer.py:  470: printSegment: recovery?(3 +- 2 = 5)
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment:  12 
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment: Explain the use of primary and foreign key in DBMS with example. What is the role of foreign
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment: key?(3 + 2)
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment: Year: 2078
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment:  1 
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment: What are different types of Database users and their roles? Explain the Data independence with
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment: example.
   DEBUG: 2023-06-04 09:23:28,271:      pdf_renderer.py:  470: printSegment:  2 
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment: what are the components of ER diagram? Explain the function of various symbols use in ER
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment: diagram. Construct an ER diagram to store data in a library of your college.
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment:  3 
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment: Explain deadlock and starvation. Explain Time stamp based protocol for concurrency control?
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment:  4 
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment: What is difference between logical data independence and physical data independence?
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment:  5 
   DEBUG: 2023-06-04 09:23:28,272:      pdf_renderer.py:  470: printSegment: Explain Relationship and Relationship sets with example.
   DEBUG: 2023-06-04 09:23:28,273:      pdf_renderer.py:  470: printSegment:  6 
   DEBUG: 2023-06-04 09:23:28,273:      pdf_renderer.py:  470: printSegment: Retrieve the TName, SName, SPhone for 
   DEBUG: 2023-06-04 09:23:28,273:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,273:      pdf_renderer.py:  470: printSegment: ABC
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment:  school using SQL from given relation as below.
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: TEACHER(TID, TName, TAddress, TQualification)
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: SCHOOL(SID, SName, SAddress, SPhone)
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: SCHOOL
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: TEACHER(SID, TID, No
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: _
   DEBUG: 2023-06-04 09:23:28,274:      pdf_renderer.py:  470: printSegment: of Period).
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment:  7 
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment: What is integrity? Explain different types of database integrity.
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment:  8 
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment: Define Functional dependencies. Explain trivial and non trivial dependencies?
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment:  9 
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment: Explain the difference between 
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment: Join
   DEBUG: 2023-06-04 09:23:28,275:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment:  and 
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment: Natural Join
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment: "
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment:  of algebraic operators with example.
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment:  10 
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment: What is Checkpoints in database recovery? How does it help in database recovery? Explain.
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment:  11 
   DEBUG: 2023-06-04 09:23:28,276:      pdf_renderer.py:  470: printSegment: Define schedule and serializability. How can you test the serializability?
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:  470: printSegment:  12 
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:  470: printSegment: Explain Boyce-Codd normal form with example. How it is different than 3rd Normal form.
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 0, [1, 'Questions', 1, 68.0]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 1, [2, 'Year: 2067', 1, 106.0]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 2, [2, 'Year: 2067%20II', 1, 637.5999999999999]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 3, [2, 'Year: 2068', 2, 578.8]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 4, [2, 'Year: 2069', 3, 392.8]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 5, [2, 'Year: 2070', 4, 284.8]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 6, [2, 'Year: 2071', 5, 70.0]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 7, [2, 'Year: 2072', 5, 529.5999999999999]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 8, [2, 'Year: 2073', 6, 386.8]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 9, [2, 'Year: 2074', 7, 70.0]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 10, [2, 'Year: 2075', 7, 511.6]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 11, [2, 'Year: 2076', 8, 326.8]
   DEBUG: 2023-06-04 09:23:28,277:      pdf_renderer.py:   53: 12, [2, 'Year: 2078', 8, 600.4]
